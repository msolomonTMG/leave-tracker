<script src='js/requiresAuth.js'></script>
<div class='row'>
  <div class='col-md-2 bg-white text-dark rounded m-2 p-2 shadow-lg align-middle'>
    <h4>Leave Tracker</h4>
  </div>
  <div class='col-md-9 bg-white text-dark rounded m-2 p-2 shadow-lg'>
    <button type="button" class="btn btn-danger" onClick="resetPflDates">Reset PFL Dates</button>
    <button type="button" class="btn btn-outline-warning" data-toggle="modal" data-target="#updatePersonModal">Update Person Info</button>
  </div>
</div>
<div class='row'>
  <div class='col-md-2 bg-white text-dark rounded m-2 p-2 shadow-lg'>
    <div id='external-events'>
      <p>
        <strong>Available Days Off</strong>
      </p>
      <div id='paid-pfl-container'>
        <div class='row'>
          <div class='col-md-2'>
            <span id='paid-pfl-counter'>({{person.fields.[Number of G9 Subsidized PFL Days Remaining]}})</span>
          </div>
          <div class='col-md-10' id='paid-pfl-events'>
          </div>
        </div>
      </div>
      <div id='non-paid-pfl-container'>
        <div class='row'>
          <div class='col-md-2'>
            <span id='non-paid-pfl-counter'>({{person.fields.[Number of Non-Subsidized PFL Days Remaining]}})</span>
          </div>
          <div class='col-md-10' id='non-paid-pfl-events'>
          </div>
        </div>
      </div>
      <div id='pto-hour-container'>
        <div class='row'>
          <div class='col-md-2'>
            <span id='pto-hour-counter'>({{person.fields.[Number of PTO Hours Remaining]}})</span>
          </div>
          <div class='col-md-10' id='pto-hour-events'>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class='col-md-9 bg-white text-dark rounded m-2 p-2 shadow-lg'>
    <div id="calendar"></div>
  </div>
</div>

<div class="modal fade text-dark" id="updatePersonModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">update person</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form action="/form/v1/person/update" method="post">
        <input type="hidden" value="{{{person.id}}}" name="personId" id="person-id">
        <div class="modal-body">
          <div class="form-group">
            <label for="person-name" class="col-form-label">name</label>
            <input type="text" class="form-control" name="personName" id="person-name" value="{{{person.fields.Name}}}">
          </div>
          <div class="form-group">
            <label for="annual-salary" class="col-form-label">annual salary</label>
            <div class="input-group">
              <div class="input-group-prepend">
                <div class="input-group-text">$</div>
              </div>
              <input type="number" class="form-control" name="annualSalary" id="annual-salary" value="{{{person.fields.[Annual Salary]}}}">
            </div>
          </div>
          <div class="form-group">
            <label for="days-on-std" class="col-form-label">number of days on short term disability</label>
            <input type="number" class="form-control" name="daysOnStd" id="days-on-std" value="{{{person.fields.[Number of Short Term Disability Days]}}}">
          </div>
          <div class="form-group">
            <label for="days-on-pto" class="col-form-label">number of paid time off days</label>
            <input type="number" class="form-control" name="daysOnPto" id="days-on-pto" value="{{{person.fields.[Number of PTO Days]}}}">
          </div>
          <div class="form-group">
            <label for="leave-start-date" class="col-form-label">leave start date</label>
            <input type="date" class="form-control" name="leaveStartDate" id="leave-start-date" value="{{{person.fields.[Leave Start Date]}}}">
          </div>
        </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">close</button>
        <button type="submit" class="btn btn-primary">update</button>
      </div>
      </form>
    </div>
  </div>
</div>

<div class="modal fade text-dark" id="deleteEventModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">delete event</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        are you sure you want to delete this?
        <input type="hidden" name="airtableId" id="delete-event-airtable-id">
        <input type="hidden" name="fullCalendarId" id="delete-event-full-calendar-id">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">cancel</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal" onClick="deleteEvent()">delete</button>
      </div>
    </div>
  </div>
</div>

<link rel="stylesheet" href="css/fullcalendar-3.9.9-fullcalendar.min.css">
<script src="js/fullcalendar-3.9.0-moment.min.js"></script>
<script src="js/fullcalendar-3.9.0-jquery.min.js"></script>
<script src="js/fullcalendar-3.9.0-fullcalendar.min.js"></script>
<script src="https://code.jquery.com/ui/1.11.3/jquery-ui.min.js"></script>
<script>
// we're given dates from airtable
let decodedJson = decodeURIComponent("{{{encodedJson}}}")
let parsedJson = JSON.parse(decodedJson)
const {plannedEvents, unplannedEvents, shortTermDisability, holidays, appUrl, person} = parsedJson
const eventsOnCalendar = shortTermDisability.concat(plannedEvents, holidays)

console.log(parsedJson)

function deleteEvent() {
  const airtableRecordId = $('#delete-event-airtable-id').val()
  const fullCalendarEventId = $('#delete-event-full-calendar-id').val()
  console.log(airtableRecordId)
  console.log(fullCalendarEventId)
  $('#calendar').fullCalendar('removeEvents', [fullCalendarEventId])
  fetch(`${appUrl}/api/v1/events/delete/${airtableRecordId}`, {
    method: 'post',
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      date: event.start,
      end: event.end
    })
  }).then((response) => {
    return response.json()
  }).then((deletedRecord) => {
    // get fresh information for counters
    fetch(`${appUrl}/api/v1/person/${person.id}`, {
      method: 'get'
    }).then((response) => {
      return response.json()
    }).then((person) => {
      console.log(person)
      console.log(person.fields['Number of G9 Subsidized PFL Days Remaining'])
      $('#paid-pfl-counter').text(`(${person.fields['Number of G9 Subsidized PFL Days Remaining']})`)
      $('#non-paid-pfl-counter').text(`(${person.fields['Number of Non-Subsidized PFL Days Remaining']})`)
      $('#pto-hour-counter').text(`(${person.fields['Number of PTO Hours Remaining']})`)
    })
  })
}

function shaveOneMinuteOff(time) {
  const MS_PER_MINUTE = 60000
  return new Date(time - 1 * MS_PER_MINUTE)
}

function isPageAccessible(user) {
  return new Promise((resolve, reject) => {
    let isAccessible = 0 // default to not accessible
    
    fetch(`/api/v1/person/all/${user.uid}`, {
      method: 'get'
    }).then((response) => {
      return response.json()
    }).then((accessiblePeople) => {
      if (!accessiblePeople) {
        return resolve(isAccessible)
      } else {
        for (const accessiblePerson of accessiblePeople) {
          // if the accessible person's id is in the url, this page is ok
          if (window.location.href.includes(accessiblePerson.id)) {
            isAccessible = 1
            return resolve(isAccessible)
          }
        }
        return resolve(isAccessible)
      }
    })
  })
}

function init() {
  const isAllowedOnPage = isPageAccessible(user)

  Promise.all([isAllowedOnPage])
    .then(values => {
      let isAllowedOnPage = values[0]
      if (isAllowedOnPage) {
        buildCalendar()
      } else {
        const error = 'You are not permitted to access that page. Contact People Ops for assistance if needed.'
        window.location.href = `/?error=${error}`
      }
    })
}

function buildCalendar() {
  $(function() {

    // initialize the external events
    // -----------------------------------------------------------------

    //TODO: this should only be called if there are PFL days available
    $('#paid-pfl-events').append(`
      <div class='unplanned-event paid-pfl mb-1 p-1'
           data-event='{
             "title":"Full Paycheck PFL",
             "personId":"${person.id}",
             "type": "PFL",
             "protection": "FMLA",
             "allDay":true,
             "stick":true,
             "color": "#05a3f2"
           }'
      >Full Paycheck PFL</div>
    `)
    //TODO: this should only be called if there are non PFL days avaialble
    $('#non-paid-pfl-events').append(`
      <div class='unplanned-event non-paid-pfl mb-1 p-1'
           data-event='{
             "title":"Not Full Paycheck PFL",
             "personId":"${person.id}",
             "type": "PFL",
             "protection": "PFL",
             "allDay":true,
             "stick":true,
             "color": "#fd82b9"
           }'
      >Not Full Paycheck PFL</div>
    `)
    //TODO: this should only be called if there are PTO hours avaialble
    $('#pto-hour-events').append(`
      <div class='unplanned-event pto-hour mb-1 p-1'
           data-event='{
             "title":"PTO Hour",
             "personId":"${person.id}",
             "type": "PTO",
             "protection": "PTO",
             "allDay":true,
             "stick":true,
             "durationEditable":false,
             "color": "#eedd00"
           }'
      >PTO Hour</div>
    `)

    $('#external-events .unplanned-event').each(function() {

      // make the event draggable using jQuery UI
      $(this).draggable({
        zIndex: 999,
        revert: true,      // will cause the event to go back to its
        revertDuration: 0  //  original position after the drag
      });

    });

    // initialize the calendar
    // -----------------------------------------------------------------

    $('#calendar').fullCalendar({
      header: {
        left: 'prev,next today',
        center: 'title',
        right: 'month,agendaWeek,agendaDay'
      },
      forceEventDuration: true,
      weekends: false,
      editable: true,
      droppable: true, // this allows things to be dropped onto the calendar
      drop (date, jsEvent, ui, resourceId) {
        //$(this).remove();
      },
      // someone changes an events start
      eventDrop (event, delta, revertFunc, jsEvent, ui, view) {
        console.log('EVENT DROP', event)
        if (event.type === 'STD') {
          // if STD, change leave date start on the person
          fetch(`${appUrl}/api/v1/person/${event.personId}`, {
            method: 'post',
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              date: event.start
            })
          })
        } else {
          // if other type, change the event
          fetch(`${appUrl}/api/v1/events/${event.airtableId}`, {
            method: 'post',
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              date: event.start,
              end: event.end
            })
          })
        }
      },
      // someone changed the duration of the event
      eventResize (event, delta, revertFunc, jsEvent, ui, view) {
        console.log('EVENT RESIZE', event)
        fetch(`${appUrl}/api/v1/events/${event.airtableId}`, {
          method: 'post',
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            date: event.start,
            end: event.end
          })
        }).then((response) => {
          return response.json()
        }).then((newEvent) => {
          event.airtableId = newEvent.id
          $('#calendar').fullCalendar('updateEvent', event)
          $('#paid-pfl-counter').text(`(${newEvent.fields['Number of G9 Subsidized PFL Days Remaining'][0]})`)
          $('#non-paid-pfl-counter').text(`(${newEvent.fields['Number of Non-Subsidized PFL Days Remaining'][0]})`)
          $('#pto-hour-counter').text(`(${newEvent.fields['Number of PTO Hours Remaining'][0]})`)
        })
      },
      // someone clicked on an event
      eventClick (event, jsEvent, view) {
        console.log('EVENT CLICK')
        console.log(event)
        if (event.type === 'PFL' || event.type === 'PTO') {
          $('#delete-event-airtable-id').val(event.airtableId)
          $('#delete-event-full-calendar-id').val(event._id)
          $('#deleteEventModal').modal()
        }
      },
      // someone drags an unplanned event onto the calendar
      eventReceive (event) {
        console.log('EVENT RECEIVE', event)
        // event.end = shaveOneMinuteOff(event.end)
        // $('#calendar').fullCalendar('updateEvent', event)
        
        fetch(`${appUrl}/api/v1/events`, {
          method: 'post',
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            date: event.start,
            end: event.end,
            personId: event.personId,
            protection: event.protection,
            type: event.type,
            name: event.title
          })
        }).then((response) => {
          return response.json()
        }).then((newEvent) => {
          event.airtableId = newEvent.id
          $('#calendar').fullCalendar('updateEvent', event)
          $('#paid-pfl-counter').text(`(${newEvent.fields['Number of G9 Subsidized PFL Days Remaining'][0]})`)
          $('#non-paid-pfl-counter').text(`(${newEvent.fields['Number of Non-Subsidized PFL Days Remaining'][0]})`)
          $('#pto-hour-counter').text(`(${newEvent.fields['Number of PTO Hours Remaining'][0]})`)
        })
      },
      events: eventsOnCalendar
    });

  });
}
</script>
